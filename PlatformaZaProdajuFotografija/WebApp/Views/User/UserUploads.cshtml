@model List<WebApp.ViewModels.PictureVM>
@{
    //TODO check if they are your uploads or someone else's
    var username = Context.User.Identity?.Name;
    ViewData["Title"] = $"{username} Uploads";
}
<div>
    <h1>Your Uploads</h1>
    <hr/>
    <div style="
        display: flex;
        overflow-wrap: normal;
        gap: 2rem;
        flex-wrap: wrap;
        justify-content: center;">
        @foreach (var picture in Model ?? new List<PictureVM>())
        {
            <a id="@picture.Guid" class="card placeholder-glow"
               style="height: 250px; width: 200px; text-decoration: none; color: black;"
               href="@Url.Action("Details", "Pictures", new { guid = picture.Guid })">
                <div class="card-img-top placeholder"
                     style="width: 200px; height: 200px;
overflow: hidden;">
                </div>
                <div class="card-body">
                    <div class="card-body">
                        <h5 class="card-title">
                            @picture.Name
                        </h5>
                        <p class="card-text">@picture.Description</p>

                    </div>
                </div>
            </a>
        }
    </div>
</div>
<script>
    const cards = document.querySelectorAll('.card');
    cards.forEach(card => {
        let url = "@Url.Action("Data", "Pictures")";
        url += `?guid=${card.id}`;
        //TODO mby throws and error
        fetch(url)
            .then(response =>
                response.blob()
            )
            .then(blob => {
                const img = document.createElement('img');
                img.src = URL.createObjectURL(blob);
                img.style = 'max-width: 200px; max-height: 200px;';
                card.querySelectorAll('.placeholder').forEach(placeholder => placeholder.className = 'card-img-top');
                card.querySelector('.card-img-top').appendChild(img);
            })
    });
</script>